@model PredictResponse
@{
    var importance = (List<FeatureImportanceItem>)ViewBag.Importance!;
    var stats = (List<TrainingStatsItem>)ViewBag.Stats!;
}
<h2>Prediction Results</h2>

@if (Model.Results.Count > 0)
{
    var r = Model.Results[0];
    <p><strong>Predicted:</strong> @r.Predicted</p>
    <p><strong>Confidence:</strong> @r.Confidence.ToString("P2")</p>
}

<h3>Top Feature Importance (numeric)</h3>
<table>
    <thead><tr><th>Feature</th><th>Importance</th></tr></thead>
    <tbody>
        @foreach (var fi in importance.OrderByDescending(x => x.Importance).Take(10))
        {
            <tr><td>@fi.Feature</td><td>@fi.Importance.ToString("0.000")</td></tr>
        }
    </tbody>
</table>

<h3>Training vs Input Averages</h3>
<table>
    <thead><tr><th>Metric</th><th>Training Avg</th><th>Input Avg</th><th>Δ</th></tr></thead>
    <tbody>
        @foreach (var s in stats)
        {
            <tr>
                <td>@s.Metric</td>
                <td>@s.Training_Average</td>
                <td>@(s.Input_Average?.ToString() ?? "-")</td>
                <td>@(s.Difference?.ToString() ?? "-")</td>
            </tr>
        }
    </tbody>
</table>

<a asp-action="Create">Back</a>
